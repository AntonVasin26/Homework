№1)На чем основано обЪектно ориентированное програмирование
1)Инкапсуляция - Приватные данные публичные методы(функция члены)
2)Полиморфизм - одинаковый интерфейс разные реализации
3)Наследование - передача данных от предков потомкам(производные классы наследуют от базовах классах(абстракция))

№2)Какие аспекты стоит учитывать при проектирование классов
1)Разднеление на публичные и приватные секции (private - по умолчанию)
2)В начале класса писать конструктор, функции члены, геттеры/сеттеры)
3)Приватные данные класса писать внизу класса.
5)Для больших функции в классе писать только обЪявление, а релизацию в отдельном файле
6)Пункты 2,3,4 позволяют чужому пользователю быстро понять, что умеет твой класс
7)Есть статические члены которые общие для всех экземпляров

№3)Почему удобно разделять классы на интерфейс и реализацию
1)Удобнее читать
2)Все классы и их членны будут обЪявлены до начала работы с ними
3)При компилирование если были изменения в одном файле, а в другом нет то перекомпиляция произойдет только одного

№4)Чем отличается внешнее связывание и внутренее
1)Внешнее связывание это когда на один юнит трансляции могут ссылатся другие юниты
(чтобы юнит знал о существование юнита с нужным ему обЪектом мы должны ему сообщить с помощью (extern int object;))
2)Внутренее связывание это когда обЪект виден только внутри конкретной единицы трансляции (static int object;)

№5)Какими особенностями обладают именнованые пространства имён
1)namespace. Всё, что объявлено внутри пользовательского пространства имен,
— принадлежит только этому пространству имен (а не глобальному)
2)Доступ к пространству имен через оператор (::)
3)Допускается объявление пространств имен в нескольких места
4)можно создавать вложенные пространства имён
5)Обладают адитивностью
6)Пвсевдонимы названий